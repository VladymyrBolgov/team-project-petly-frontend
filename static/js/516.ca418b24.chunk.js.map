{"version":3,"file":"static/js/516.ca418b24.chunk.js","mappings":"8KAAA,IAAMA,EAEQ,QAFRA,EAII,QAJJA,EAKW,SALXA,EAMK,SAGEC,EAAS,CACpBC,OAAO,eAAD,OATE,QASF,KACNC,WAAW,eAAD,OAAiBH,EAAjB,KAEVI,OAAO,eAAD,OAAiBJ,EAAjB,KACNK,WAAW,cAAD,OAAgBL,EAAhB,4BAA+CA,EAA/C,KAEVM,cAAc,eAAD,OAAiBN,EAAjB,KACbO,QAAQ,eAAD,OAAiBP,EAAjB,K,kFCVIQ,EAAeC,EAAAA,GAAAA,OAAH,4TAEV,SAAAC,GAAK,OAAIA,EAAMV,IAAV,IACE,SAAAU,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,UAAvB,IACf,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,IAAxB,IACE,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,IAAtB,IACT,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,UAAUC,IAA1B,IAMN,SAAAT,GAAK,OAAIA,EAAMC,MAAMG,QAAQM,MAAxB,IACN,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,WAAvB,IAKLC,GAAeb,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,mPACH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,MAAvB,IACZ,SAAAV,GAAK,OAAIA,EAAMV,IAAV,IACT,SAAAU,GAAK,OAAIA,EAAMC,MAAMC,OAAOW,KAAvB,IAOH,SAAAb,GAAK,OAAIA,EAAMC,MAAMC,OAAOW,KAAvB,IACM,SAAAb,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,WAAvB,G,0LChChBG,GAAaf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,6OAIT,SAAAC,GAAK,OAAIA,EAAMC,MAAMe,MAAM,EAAtB,IAEA,SAAAhB,GAAK,OAAIA,EAAMC,MAAMgB,YAAYC,KAA5B,GAGb3B,EAAAA,EAAAA,QAME4B,EAAWpB,EAAAA,GAAAA,IAAH,iIAKZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMe,MAAM,EAAtB,IAEDI,GAAcrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,0YAGP,SAAAC,GAAK,OAAIA,EAAMC,MAAMqB,MAAMjB,IAAtB,IACP,SAAAL,GAAK,OAAIA,EAAMC,MAAMO,UAAUe,IAA1B,IAGJ,SAAAvB,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,UAAvB,IACT,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQoB,IAAxB,IACE,SAAAxB,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,IAAtB,IAIJ,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,MAAvB,GAEdnB,EAAAA,EAAAA,QAEM,SAAAS,GAAK,OAAIA,EAAMC,MAAMO,UAAUiB,IAA1B,GAEXlC,EAAAA,EAAAA,SAIEmC,GAAY3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAH,iGAGP,SAAAC,GAAK,OAAIA,EAAMC,MAAMO,UAAUe,IAA1B,IACT,SAAAvB,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,MAAvB,IAEHkB,EAAW7B,EAAAA,GAAAA,EAAH,0MACJ,SAAAC,GAAK,OAAIA,EAAMC,MAAMqB,MAAMjB,IAAtB,IACP,SAAAL,GAAK,OAAIA,EAAMC,MAAMO,UAAUqB,IAA1B,IAGT,SAAA7B,GAAK,OAAIA,EAAMC,MAAMC,OAAO4B,SAAvB,I,mBC7CVC,EAAiB,iCACjBC,EACJ,0EAEWC,EAAY,WACvB,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAiBD,EAAAA,EAAAA,MACjBE,GAAWC,EAAAA,EAAAA,MACXC,EAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KAEJE,IAAI,EAAG,4CACPC,IAAI,GAAI,8CACRC,QAAQZ,EAAa,gCACrBa,SAAS,sBACZC,SAAUN,EAAAA,KAEPE,IAAI,EAAG,+CACPC,IAAI,GAAI,iDACRC,QAAQb,EAAgB,kCACxBc,SAAS,0BAWd,OACE,SAAC,KAAD,CACEE,cAVkB,CACpBN,MAAO,GACPK,SAAU,IASRE,iBAAkBT,EAClBU,SAPiB,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,MAAOK,EAAe,EAAfA,SAC7BT,GAASa,EAAAA,EAAAA,IAAM,CAAET,MAAAA,EAAOK,SAAAA,IACzB,EAEC,UAKE,UAAChC,EAAD,CAAYqC,aAAa,MAAzB,WACE,UAAChC,EAAD,YACE,SAACC,EAAD,CACEgC,KAAK,OACLC,KAAK,QACLC,GAAIpB,EACJqB,YAAY,WAEd,SAAC7B,EAAD,CAAW2B,KAAK,QAAQG,UAAU,OAClC,SAACpC,EAAD,CACEgC,KAAK,WACLC,KAAK,WACLC,GAAIlB,EACJmB,YAAY,cAEd,SAAC7B,EAAD,CAAW2B,KAAK,WAAWG,UAAU,UAEvC,SAAC,IAAD,CAAcJ,KAAK,SAAS9D,KAAK,QAAjC,oBAGA,UAACsC,EAAD,sCACyB,SAAC,KAAD,CAAS6B,GAAG,YAAZ,6BAKhC,EC3EYC,EAAc3D,EAAAA,GAAAA,QAAH,wIAEbR,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,SAIEoE,EAAc5D,EAAAA,GAAAA,IAAH,0RACbR,EAAAA,EAAAA,QACO,SAAAS,GAAK,OAAIA,EAAMC,MAAMC,OAAOW,KAAvB,IAEF,SAAAb,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,IAAtB,GAKfhB,EAAAA,EAAAA,SAKEqE,EAAmB7D,EAAAA,GAAAA,GAAH,+MACV,SAAAC,GAAK,OAAIA,EAAMC,MAAMe,MAAM,EAAtB,IAEP,SAAAhB,GAAK,OAAIA,EAAMC,MAAMqB,MAAMjB,IAAtB,GAGXd,EAAAA,EAAAA,QACQ,SAAAS,GAAK,OAAIA,EAAMC,MAAMgB,YAAYC,KAA5B,IACP,SAAAlB,GAAK,OAAIA,EAAMC,MAAMO,UAAUqD,IAA1B,ICftB,EAfkB,WAChB,OACE,2BACE,SAACH,EAAD,WACE,SAAC,IAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,qBACA,SAAC3B,EAAD,YAMX,C,wDChBM,IAkBIE,EAAS,eAAC7C,EAAD,uDAAQ,GAAR,OAClBwE,OAAOC,gBAAgB,IAAIC,WAAW1E,IAAO2E,QAAO,SAACX,EAAIY,GAWvD,OAREZ,IAFFY,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["Device.js","components/common/StyledButton/StyledButton.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const size = {\n  mobile: '320px',\n  mobileOnly: '479px',\n  tabletOnly: '767px',\n  tablet: '768px',\n  beforeDesktop: '1279px',\n  desktop: '1280px',\n};\n\nexport const device = {\n  mobile: `(min-width: ${size.mobile})`,\n  mobileOnly: `(max-width: ${size.mobileOnly})`,\n\n  tablet: `(min-width: ${size.tablet})`,\n  tabletOnly: `(min-width:${size.tablet}) and (max-width:${size.beforeDesktop})`,\n\n  beforeDesktop: `(max-width: ${size.beforeDesktop})`,\n  desktop: `(min-width: ${size.desktop})`,\n}","import styled from 'styled-components';\n\n// Оскільки ширина кнопок на макетах різна, при використанні компонента кнопки\n//в своєму компоненті ОБОВ'ЯЗКОВО передавайте пропс size з шириною вашої кнопки,\n//вона автоматично буде передана в min - width.\n//Наприклад < StyledButton size = \"180px\" > Cancel</ >\n\nexport const StyledButton = styled.button`\n  padding: 8px 41px;\n  min-width: ${props => props.size};\n  background-color: ${props => props.theme.colors.background};\n  border: ${props => props.theme.borders.main};\n  border-radius: ${props => props.theme.radii.br40};\n  font-size: ${props => props.theme.fontSizes.fs20};\n  line-height: 1.35;\n  transition: color 250ms linear, border 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: ${props => props.theme.borders.accent};\n    color: ${props => props.theme.colors.hoverAccent};\n    cursor: pointer;\n  }\n`;\n\nexport const AccentButton = styled(StyledButton)`\n  background-color: ${props => props.theme.colors.accent};\n  min-width: ${props => props.size};\n  color: ${props => props.theme.colors.white};\n  border: none;\n  transition: background-color 250ms linear;\n\n  &:hover,\n  &:focus {\n    border: none;\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.hoverAccent};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { device } from 'Device';\n\nexport const FormFormik = styled(Form)`\n  width: 100%;\n  margin: 0 auto;\n  button {\n    margin: ${props => props.theme.space[5]}px auto;\n    width: 280px;\n    font-weight: ${props => props.theme.fontWeights.fw500};\n    letter-spacing: 0.04em;\n  }\n  @media ${device.tablet} {\n    > button {\n      width: 458px;\n    }\n  }\n`;\nexport const BoxInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: ${props => props.theme.space[2]}px;\n`;\nexport const InputFormik = styled(Field)`\n  width: 280px;\n  padding: 11px 0 11px 14px;\n  font-family: ${props => props.theme.fonts.main};\n  font-size: ${props => props.theme.fontSizes.fs14};\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  background: ${props => props.theme.colors.background};\n  border: ${props => props.theme.borders.auth};\n  border-radius: ${props => props.theme.radii.br40};\n  :hover,\n  :focus {\n    cursor: pointer;\n    border-color: ${props => props.theme.colors.accent};\n  }\n  @media ${device.tablet} {\n    width: 448px;\n    font-size: ${props => props.theme.fontSizes.fs18};\n  }\n  @media ${device.desktop} {\n    width: 458px;\n  }\n`;\nexport const ErrorText = styled(ErrorMessage)`\n  width: 100%;\n  text-align: center;\n  font-size: ${props => props.theme.fontSizes.fs14};\n  color: ${props => props.theme.colors.accent};\n`;\nexport const Question = styled.p`\n  font-family: ${props => props.theme.fonts.main};\n  font-size: ${props => props.theme.fontSizes.fs12};\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.inputText};\n  > a {\n    text-decoration-line: underline;\n    color: #3091eb;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/authOperations';\nimport {\n  FormFormik,\n  InputFormik,\n  ErrorText,\n  Question,\n  BoxInput,\n} from './LoginForm.styled';\nimport { AccentButton } from 'components/common/StyledButton/StyledButton.styled';\n\nconst passwordRegexp = /^[A-Za-z0-9!?#$%^&_\\-*]{7,32}$/;\nconst emailRegexp =\n  /^[^-._]{1}[A-Za-z0-9._-]{1,}@[^-._]{1}[A-Za-z0-9.-]{0,}\\.[A-Za-z]{2,4}$/;\n\nexport const LoginForm = () => {\n  const loginId = nanoid();\n  const passwordIdLogg = nanoid();\n  const dispatch = useDispatch();\n  const schema = yup.object({\n    email: yup\n      .string()\n      .min(7, 'Email must consist of at least 7 symbols')\n      .max(63, 'Email must contain no more than 63 symbols')\n      .matches(emailRegexp, 'Please, enter a valid e-mail')\n      .required('E-mail is required'),\n    password: yup\n      .string()\n      .min(7, 'Password must consist of at least 7 symbols')\n      .max(32, 'Password must contain no more than 32 symbols')\n      .matches(passwordRegexp, 'Please, enter a valid password')\n      .required('Password is required'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = ({ email, password }) => {\n    dispatch(logIn({ email, password }));\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormFormik autoComplete=\"off\">\n        <BoxInput>\n          <InputFormik\n            type=\"text\"\n            name=\"email\"\n            id={loginId}\n            placeholder=\"Email\"\n          />\n          <ErrorText name=\"email\" component=\"p\" />\n          <InputFormik\n            type=\"password\"\n            name=\"password\"\n            id={passwordIdLogg}\n            placeholder=\"Password\"\n          />\n          <ErrorText name=\"password\" component=\"p\" />\n        </BoxInput>\n        <AccentButton type=\"submit\" size=\"280px\">\n          Login\n        </AccentButton>\n        <Question>\n          Don't have an account? <NavLink to=\"/register\">Register</NavLink>\n        </Question>\n      </FormFormik>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from 'Device';\n\nexport const AuthSection = styled.section`\n  padding-top: 44px;\n  @media ${device.tablet} {\n    padding-top: 204px;\n  }\n  @media ${device.desktop} {\n    padding-top: 80px;\n  }\n`;\nexport const AuthWrapper = styled.div`\n  @media ${device.tablet} {\n    background: ${props => props.theme.colors.white};\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: ${props => props.theme.radii.br40};\n    padding: 65px 75px 40px 75px;\n    width: 608px;\n    margin: 0 auto;\n  }\n  @media ${device.desktop} {\n    width: 618px;\n    padding: 60px 80px;\n  }\n`;\nexport const TitleAuthSection = styled.h2`\n  margin-bottom: ${props => props.theme.space[5]}px;\n  text-align: center;\n  font-family: ${props => props.theme.fonts.main};\n  line-height: 1.37;\n  letter-spacing: 0.04em;\n  @media ${device.tablet} {\n    font-weight: ${props => props.theme.fontWeights.fw500};\n    font-size: ${props => props.theme.fontSizes.fs36};\n  }\n`;\n","import { Container } from 'components/common/Container.styled';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { TitleAuthSection, AuthSection, AuthWrapper } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <main>\n      <AuthSection>\n        <Container>\n          <AuthWrapper>\n            <TitleAuthSection>Login</TitleAuthSection>\n            <LoginForm></LoginForm>\n          </AuthWrapper>\n        </Container>\n      </AuthSection>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["size","device","mobile","mobileOnly","tablet","tabletOnly","beforeDesktop","desktop","StyledButton","styled","props","theme","colors","background","borders","main","radii","br40","fontSizes","fs20","accent","hoverAccent","AccentButton","white","FormFormik","Form","space","fontWeights","fw500","BoxInput","InputFormik","Field","fonts","fs14","auth","fs18","ErrorText","ErrorMessage","Question","fs12","inputText","passwordRegexp","emailRegexp","LoginForm","loginId","nanoid","passwordIdLogg","dispatch","useDispatch","schema","yup","email","min","max","matches","required","password","initialValues","validationSchema","onSubmit","logIn","autoComplete","type","name","id","placeholder","component","to","AuthSection","AuthWrapper","TitleAuthSection","fs36","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}